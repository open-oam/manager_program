// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: ping/ping.proto

package gen

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// message StreamPerf { bool start = 1; }
type PerfStreamType int32

const (
	PerfStreamType_START PerfStreamType = 0
	PerfStreamType_STOP  PerfStreamType = 1
)

// Enum value maps for PerfStreamType.
var (
	PerfStreamType_name = map[int32]string{
		0: "START",
		1: "STOP",
	}
	PerfStreamType_value = map[string]int32{
		"START": 0,
		"STOP":  1,
	}
)

func (x PerfStreamType) Enum() *PerfStreamType {
	p := new(PerfStreamType)
	*p = x
	return p
}

func (x PerfStreamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PerfStreamType) Descriptor() protoreflect.EnumDescriptor {
	return file_ping_ping_proto_enumTypes[0].Descriptor()
}

func (PerfStreamType) Type() protoreflect.EnumType {
	return &file_ping_ping_proto_enumTypes[0]
}

func (x PerfStreamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PerfStreamType.Descriptor instead.
func (PerfStreamType) EnumDescriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ping_ping_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ping_ping_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{0}
}

type PerfMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Seq      uint32 `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`
	OrigTime uint32 `protobuf:"varint,3,opt,name=OrigTime,proto3" json:"OrigTime,omitempty"`
	RecvTime uint64 `protobuf:"varint,4,opt,name=RecvTime,proto3" json:"RecvTime,omitempty"`
	SrcIP    uint32 `protobuf:"varint,5,opt,name=SrcIP,proto3" json:"SrcIP,omitempty"`
}

func (x *PerfMessage) Reset() {
	*x = PerfMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ping_ping_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerfMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerfMessage) ProtoMessage() {}

func (x *PerfMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ping_ping_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerfMessage.ProtoReflect.Descriptor instead.
func (*PerfMessage) Descriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{1}
}

func (x *PerfMessage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PerfMessage) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PerfMessage) GetOrigTime() uint32 {
	if x != nil {
		return x.OrigTime
	}
	return 0
}

func (x *PerfMessage) GetRecvTime() uint64 {
	if x != nil {
		return x.RecvTime
	}
	return 0
}

func (x *PerfMessage) GetSrcIP() uint32 {
	if x != nil {
		return x.SrcIP
	}
	return 0
}

type LoadEbpfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface string `protobuf:"bytes,1,opt,name=Interface,proto3" json:"Interface,omitempty"`
	File      string `protobuf:"bytes,2,opt,name=File,proto3" json:"File,omitempty"`
	Program   string `protobuf:"bytes,3,opt,name=Program,proto3" json:"Program,omitempty"`
	PerfMap   string `protobuf:"bytes,4,opt,name=PerfMap,proto3" json:"PerfMap,omitempty"`
}

func (x *LoadEbpfRequest) Reset() {
	*x = LoadEbpfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ping_ping_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadEbpfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEbpfRequest) ProtoMessage() {}

func (x *LoadEbpfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ping_ping_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEbpfRequest.ProtoReflect.Descriptor instead.
func (*LoadEbpfRequest) Descriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{2}
}

func (x *LoadEbpfRequest) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *LoadEbpfRequest) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *LoadEbpfRequest) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *LoadEbpfRequest) GetPerfMap() string {
	if x != nil {
		return x.PerfMap
	}
	return ""
}

type LoadEbpfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoadEbpfResponse) Reset() {
	*x = LoadEbpfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ping_ping_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadEbpfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadEbpfResponse) ProtoMessage() {}

func (x *LoadEbpfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ping_ping_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadEbpfResponse.ProtoReflect.Descriptor instead.
func (*LoadEbpfResponse) Descriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{3}
}

type UnloadEbpfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnloadEbpfRequest) Reset() {
	*x = UnloadEbpfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ping_ping_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadEbpfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadEbpfRequest) ProtoMessage() {}

func (x *UnloadEbpfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ping_ping_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadEbpfRequest.ProtoReflect.Descriptor instead.
func (*UnloadEbpfRequest) Descriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{4}
}

type UnloadEbpfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnloadEbpfResponse) Reset() {
	*x = UnloadEbpfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ping_ping_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadEbpfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadEbpfResponse) ProtoMessage() {}

func (x *UnloadEbpfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ping_ping_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadEbpfResponse.ProtoReflect.Descriptor instead.
func (*UnloadEbpfResponse) Descriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{5}
}

type PerfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type PerfStreamType `protobuf:"varint,1,opt,name=type,proto3,enum=PerfStreamType" json:"type,omitempty"`
}

func (x *PerfRequest) Reset() {
	*x = PerfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ping_ping_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerfRequest) ProtoMessage() {}

func (x *PerfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ping_ping_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerfRequest.ProtoReflect.Descriptor instead.
func (*PerfRequest) Descriptor() ([]byte, []int) {
	return file_ping_ping_proto_rawDescGZIP(), []int{6}
}

func (x *PerfRequest) GetType() PerfStreamType {
	if x != nil {
		return x.Type
	}
	return PerfStreamType_START
}

var File_ping_ping_proto protoreflect.FileDescriptor

var file_ping_ping_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x7d, 0x0a, 0x0b, 0x50, 0x65,
	0x72, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x53, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x72, 0x69, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4f,
	0x72, 0x69, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x76, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x63, 0x76, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x72, 0x63, 0x49, 0x50, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x53, 0x72, 0x63, 0x49, 0x50, 0x22, 0x77, 0x0a, 0x0f, 0x4c, 0x6f, 0x61,
	0x64, 0x45, 0x62, 0x70, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x66,
	0x4d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x72, 0x66, 0x4d,
	0x61, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x62, 0x70, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x62, 0x70, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x62, 0x70, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x32, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x50, 0x65, 0x72, 0x66, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x25, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x66, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x01, 0x32, 0x78, 0x0a, 0x06,
	0x50, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x62,
	0x70, 0x66, 0x12, 0x10, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x62, 0x70, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x1e,
	0x0a, 0x0a, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x62, 0x70, 0x66, 0x12, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x26,
	0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x65, 0x72, 0x66, 0x12, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x6f, 0x61, 0x6d, 0x2f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ping_ping_proto_rawDescOnce sync.Once
	file_ping_ping_proto_rawDescData = file_ping_ping_proto_rawDesc
)

func file_ping_ping_proto_rawDescGZIP() []byte {
	file_ping_ping_proto_rawDescOnce.Do(func() {
		file_ping_ping_proto_rawDescData = protoimpl.X.CompressGZIP(file_ping_ping_proto_rawDescData)
	})
	return file_ping_ping_proto_rawDescData
}

var file_ping_ping_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ping_ping_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ping_ping_proto_goTypes = []interface{}{
	(PerfStreamType)(0),        // 0: PerfStreamType
	(*Empty)(nil),              // 1: Empty
	(*PerfMessage)(nil),        // 2: PerfMessage
	(*LoadEbpfRequest)(nil),    // 3: LoadEbpfRequest
	(*LoadEbpfResponse)(nil),   // 4: LoadEbpfResponse
	(*UnloadEbpfRequest)(nil),  // 5: UnloadEbpfRequest
	(*UnloadEbpfResponse)(nil), // 6: UnloadEbpfResponse
	(*PerfRequest)(nil),        // 7: PerfRequest
}
var file_ping_ping_proto_depIdxs = []int32{
	0, // 0: PerfRequest.type:type_name -> PerfStreamType
	3, // 1: Pinger.LoadEbpf:input_type -> LoadEbpfRequest
	1, // 2: Pinger.UnloadEbpf:input_type -> Empty
	1, // 3: Pinger.StreamPerf:input_type -> Empty
	1, // 4: Pinger.LoadEbpf:output_type -> Empty
	1, // 5: Pinger.UnloadEbpf:output_type -> Empty
	2, // 6: Pinger.StreamPerf:output_type -> PerfMessage
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ping_ping_proto_init() }
func file_ping_ping_proto_init() {
	if File_ping_ping_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ping_ping_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ping_ping_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerfMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ping_ping_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadEbpfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ping_ping_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadEbpfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ping_ping_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadEbpfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ping_ping_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadEbpfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ping_ping_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ping_ping_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ping_ping_proto_goTypes,
		DependencyIndexes: file_ping_ping_proto_depIdxs,
		EnumInfos:         file_ping_ping_proto_enumTypes,
		MessageInfos:      file_ping_ping_proto_msgTypes,
	}.Build()
	File_ping_ping_proto = out.File
	file_ping_ping_proto_rawDesc = nil
	file_ping_ping_proto_goTypes = nil
	file_ping_ping_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PingerClient is the client API for Pinger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingerClient interface {
	LoadEbpf(ctx context.Context, in *LoadEbpfRequest, opts ...grpc.CallOption) (*Empty, error)
	UnloadEbpf(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	StreamPerf(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Pinger_StreamPerfClient, error)
}

type pingerClient struct {
	cc grpc.ClientConnInterface
}

func NewPingerClient(cc grpc.ClientConnInterface) PingerClient {
	return &pingerClient{cc}
}

func (c *pingerClient) LoadEbpf(ctx context.Context, in *LoadEbpfRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Pinger/LoadEbpf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingerClient) UnloadEbpf(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Pinger/UnloadEbpf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingerClient) StreamPerf(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Pinger_StreamPerfClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Pinger_serviceDesc.Streams[0], "/Pinger/StreamPerf", opts...)
	if err != nil {
		return nil, err
	}
	x := &pingerStreamPerfClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Pinger_StreamPerfClient interface {
	Recv() (*PerfMessage, error)
	grpc.ClientStream
}

type pingerStreamPerfClient struct {
	grpc.ClientStream
}

func (x *pingerStreamPerfClient) Recv() (*PerfMessage, error) {
	m := new(PerfMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PingerServer is the server API for Pinger service.
type PingerServer interface {
	LoadEbpf(context.Context, *LoadEbpfRequest) (*Empty, error)
	UnloadEbpf(context.Context, *Empty) (*Empty, error)
	StreamPerf(*Empty, Pinger_StreamPerfServer) error
}

// UnimplementedPingerServer can be embedded to have forward compatible implementations.
type UnimplementedPingerServer struct {
}

func (*UnimplementedPingerServer) LoadEbpf(context.Context, *LoadEbpfRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadEbpf not implemented")
}
func (*UnimplementedPingerServer) UnloadEbpf(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnloadEbpf not implemented")
}
func (*UnimplementedPingerServer) StreamPerf(*Empty, Pinger_StreamPerfServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamPerf not implemented")
}

func RegisterPingerServer(s *grpc.Server, srv PingerServer) {
	s.RegisterService(&_Pinger_serviceDesc, srv)
}

func _Pinger_LoadEbpf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadEbpfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingerServer).LoadEbpf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Pinger/LoadEbpf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingerServer).LoadEbpf(ctx, req.(*LoadEbpfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pinger_UnloadEbpf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingerServer).UnloadEbpf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Pinger/UnloadEbpf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingerServer).UnloadEbpf(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pinger_StreamPerf_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PingerServer).StreamPerf(m, &pingerStreamPerfServer{stream})
}

type Pinger_StreamPerfServer interface {
	Send(*PerfMessage) error
	grpc.ServerStream
}

type pingerStreamPerfServer struct {
	grpc.ServerStream
}

func (x *pingerStreamPerfServer) Send(m *PerfMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _Pinger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Pinger",
	HandlerType: (*PingerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoadEbpf",
			Handler:    _Pinger_LoadEbpf_Handler,
		},
		{
			MethodName: "UnloadEbpf",
			Handler:    _Pinger_UnloadEbpf_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamPerf",
			Handler:       _Pinger_StreamPerf_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ping/ping.proto",
}
